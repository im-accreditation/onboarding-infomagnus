name: New User Onboarding

on:
  workflow_dispatch:
    inputs:
      username:
        description: 'New user GitHub username'

jobs:
  create_repo_and_assign_issues:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Create repository for new user
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUBB_TOKEN }}
        script: |
          const repoName = 'repository12343'
          const response = await github.repos.createForAuthenticatedUser({ name: repoName })
          console.log(response.data.html_url)
          core.setOutput('repo_url', response.data.html_url)

    - name: Assign issues to new repository
      uses: actions/github-script@v3
      with:
        github-token: ${{ secrets.GITHUBB_TOKEN }}
        script: |
          const octokit = new github.GitHub(github-token);
          const repository = core.getInput("repository12343");
          const docsPath = "docs";
          const assignees = [github.event.issue.user.login];
          const issuesResponse = await octokit.issues.listForRepo({
            owner: github.context.repo.owner,
              repo: github.context.repo.repo,
              state: "open"
            });
            for (const issue of issuesResponse.data) {
              const fileResponse = await octokit.repos.getContent({
                owner: github.context.repo.owner,
                repo: github.context.repo.repo,
                path: docsPath
              });
            const issueLabels = issue.labels.map(label => label.name);
            if (fileResponse.data.type === "file" && issueLabels.includes("needs-assignment")) {
              await octokit.issues.update({
                owner: github.context.repo.owner,
                repo: repository,
                issue_number: issue.number,
                assignees
              });
              await octokit.issues.removeLabel({
                owner: github.context.repo.owner,
                repo: github.context.repo.repo,
                issue_number: issue.number,
                name: "needs-assignment"
              });
            }
          }
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUBB_TOKEN }}
