name: Create New Repository and Assign Issues Workflow
on:
  push:
    # Run the workflow only when a new branch is created
    branches:
      - 'main'
jobs:
  create-repo-and-assign-issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Create New Repository
        uses: actions/github-script@v4
        with:
          script: |
            const response = await github.repos.createForAuthenticatedUser({
              name: 'new-repo',
              private: true
            });
            console.log(`Created new repository ${response.data.html_url}`);
          # Replace PERSONAL_ACCESS_TOKEN with the actual personal access token with appropriate permissions
        id: create_repo
      - name: Clone Main Repository
        uses: actions/checkout@v2
        with:
          repository: im-sandbox-suryaraghava80/onboarding-infomagnus
          ref: main
          path: main-repo
      - name: Assign Issues to New Repository
        uses: actions/github-script@v4
        with:
          script: |
            const octokit = require("@octokit/rest")();
            const issues = await octokit.issues.listForRepo({
              owner: "im-sandbox-suryaraghava80",
              repo: "onboarding-infomagnus"
            });
            const issueNumbers = issues.data.map(issue => issue.number);
            for (const issueNumber of issueNumbers) {
              await octokit.issues.create({
                owner: "im-sandbox-suryaraghava80",
                repo: "new-repo",
                title: issues.data.find(issue => issue.number === issueNumber).title,
                body: issues.data.find(issue => issue.number === issueNumber).body
              });
              console.log(`Assigned issue #${issueNumber} to new repository.`);
            }
          # Replace PERSONAL_ACCESS_TOKEN with the actual personal access token with appropriate permissions
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
